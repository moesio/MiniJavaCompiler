//
// Generated by JTB 1.3.2
//

package br.com.seimos.minijava.syntaxtree;

/**
 * Grammar production:
 * <PRE>
 * f0 -> &lt;INTEGER_LITERAL&gt;
 *       | &lt;TRUE&gt;
 *       | &lt;FALSE&gt;
 *       | &lt;IDENTIFIER&gt;
 *       | &lt;THIS&gt;
 *       | &lt;NEW&gt; &lt;INTEGER&gt; &lt;LBRACKET&gt; Expression() &lt;RBRACKET&gt;
 *       | &lt;NEW&gt; &lt;IDENTIFIER&gt; &lt;LPAREN&gt; &lt;RPAREN&gt;
 *       | &lt;NOT&gt; Expression()
 *       | &lt;LPAREN&gt; Expression() &lt;RPAREN&gt;
 * </PRE>
 */
public class PrimaryExpression implements Node {
	public NodeChoice f0;

	public PrimaryExpression(NodeChoice n0) {
		f0 = n0;
	}

	public void accept(br.com.seimos.minijava.visitor.Visitor v) {
		v.visit(this);
	}

	public <R, A> R accept(br.com.seimos.minijava.visitor.GJVisitor<R, A> v, A argu) {
		return v.visit(this, argu);
	}

	public <R> R accept(br.com.seimos.minijava.visitor.GJNoArguVisitor<R> v) {
		return v.visit(this);
	}

	public <A> void accept(br.com.seimos.minijava.visitor.GJVoidVisitor<A> v, A argu) {
		v.visit(this, argu);
	}
}
